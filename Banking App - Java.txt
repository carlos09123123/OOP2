import java.util.Scanner;


public class Main {
    public static void main(String[] args) {
        BankingApp bankingApp = new BankingApp();
        Scanner scanner = new Scanner(System.in);
        BankAccount account = null;

        System.out.print("Enter account number: ");
        String accountNumber = scanner.next();
        account = bankingApp.createBankAccount(accountNumber);

        while (true) {
            System.out.println("Menu:");
            System.out.println("1. Deposit");
            System.out.println("2. Withdraw");
            System.out.println("3. Quit");

            System.out.print("\nEnter your choice: ");
            int choice = scanner.nextInt();

            if (choice == 1) {
                System.out.print("Enter amount to deposit: ");
                float amount = scanner.nextFloat();
                bankingApp.deposit(account, amount);
                System.out.println("Deposit successful!");
            } else if (choice == 2) {
                System.out.print("Enter amount to withdraw: ");
                float amount = scanner.nextFloat();
                bankingApp.withdraw(account, amount);
            } else if (choice == 3) {
                System.out.println("Exiting... Thank you!");
                break;
            } else {
                System.out.println("Invalid choice! Please enter a valid option.");
            }

            System.out.println();
        }
        scanner.close();
    }
}

class MegativeBalanceException extends Exception {
    public MegativeBalanceException(String message) {
        super(message);
    }
}

class BankAccount {
    private String accountNumber;
    private float balance;

    public BankAccount(String accountNumber) {
        this.accountNumber = accountNumber;
        this.balance = 0.0f;
    }

    public void deposit(float amount) {
        if (amount > 0) {
            balance += amount;
        }
    }

    public void withdraw(float amount) throws MegativeBalanceException {
        if (amount <= 0) {
            return;  // Silently ignore non-positive amounts
        }
        if (balance - amount < 0) {
            throw new MegativeBalanceException("Cannot withdraw more than balance");
        }
        balance -= amount;
    }

    public String getAccountNumber() {
        return accountNumber;
    }

    public float getBalance() {
        return balance;
    }
}

class BankingApp {
    public BankAccount createBankAccount(String accountNumber) {
        return new BankAccount(accountNumber);
    }

    public void deposit(BankAccount bankAccount, float amount) {
        bankAccount.deposit(amount);
    }

    public void withdraw(BankAccount bankAccount, float amount) {
        try {
            bankAccount.withdraw(amount);
        } catch (MegativeBalanceException e) {
            System.out.println(e.getMessage());
        }
    }
}